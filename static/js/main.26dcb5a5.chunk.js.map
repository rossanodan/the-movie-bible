{"version":3,"sources":["store/reducers/discover/discoverReducer.js","store/store.js","context/ThemeContext.jsx","components/Navigation/Navigation.jsx","components/PagesNavigator/PagesNavigator.jsx","components/Button/Button.jsx","components/MovieCard/MovieCard.jsx","pages/Home/Home.jsx","pages/Discover/Discover.jsx","pages/Movie/Movie.jsx","App.jsx","serviceWorker.js","index.js","pages/Movie/Movie.module.scss","pages/Home/Home.module.scss","pages/Discover/Discover.module.scss","components/MovieCard/MovieCard.module.scss","components/PagesNavigator/PagesNavigator.module.scss","components/Button/Button.module.scss"],"names":["initialState","discoverReducer","state","action","type","store","createStore","ThemeContext","React","createContext","dark","toggle","lightTheme","darkTheme","Navigation","bg","variant","useContext","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","withRouter","props","links","location","pathname","includes","to","styles","pagesNavigator","Button","button","handleClick","children","MovieCard","poster_path","Card","card","Img","src","Body","Title","Text","API_KEY","override","css","Home","handleChange","e","setState","searchTerm","target","value","search","_","debounce","isLoading","axios","get","then","response","results","data","catch","error","console","log","errorMessage","home","searchBar","placeholder","onChange","this","size","color","loading","grid","map","movie","key","Component","URL","Discover","fetch","sortBy","page","total_pages","hasMore","movies","parseInt","match","params","oldProps","newProps","discover","paginator","history","push","useState","setMovie","genres","setGenres","spokenLanguages","setSpokenLanguages","setIsLoading","useEffect","movie_id","spoken_languages","tagline","genre","name","overview","runtime","releaseDate","release_date","popularity","sL","toString","extractSpokenLanguages","media","alt","backdrop_path","App","style","paddingBottom","exact","path","Boolean","window","hostname","ReactDOM","render","setDark","localStorage","getItem","applyTheme","theme","document","getElementsByTagName","cssText","join","Provider","setItem","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.26dcb5a5.chunk.js","sourcesContent":["const initialState = {};\n\nconst discoverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default discoverReducer;","// Entry point for Redux\n\nimport { createStore } from 'redux';\nimport discoverReducer from './reducers/discover/discoverReducer';\n\nconst store = createStore(discoverReducer);\n\nexport default store;","import React, { useState, useEffect } from 'react';\n\nconst ThemeContext = React.createContext({\n  dark: false,\n  toggle: () => {},\n})\n\nexport default ThemeContext;\n\nexport function ThemeProvider (props) {\n  // keeps state of the current theme\n  const [dark, setDark] = useState(false);\n\n    // paints the app before it renders elements\n    useEffect(() => {\n      const lastTheme = window.localStorage.getItem('darkTheme');\n      \n      if (lastTheme === 'true') {\n        setDark(true);\n        applyTheme(darkTheme);\n      } else {\n        setDark(false);\n        applyTheme(lightTheme);\n      } \n    // if state changes, repaints the app\n    }, [dark]);\n  \n    // rewrites set of css variablels/colors\n    const applyTheme = theme => {\n      const root = document.getElementsByTagName('html')[0];\n      root.style.cssText = theme.join(';');\n    }\n\n  const toggle = () => {\n    const body = document.getElementsByTagName('body')[0];\n    body.style.cssText = 'transition: background .5s ease';\n\n    setDark(!dark);\n    window.localStorage.setItem('darkTheme', !dark);\n  };\n\n  return <ThemeContext.Provider value={{\n    dark, toggle,\n  }}>\n    {props.children}\n  </ThemeContext.Provider>\n}\n\n// styles\nconst lightTheme = [\n  '--background-color: #FFF',\n  '--color: #000'\n];\n\nconst darkTheme = [\n  '--background-color: #121212',  \n  '--color: #FFF'\n];","import React, { useContext } from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport ThemeContext from '../../context/ThemeContext';\n\nconst Navigation = () => {\n  const { dark, toggle } = useContext(ThemeContext);\n  let bg, variant;\n  if (dark) {\n    bg = variant = 'dark';\n  } else {\n    bg = variant = 'light';\n  }\n  return (\n    <header>\n      <Navbar collapseOnSelect expand=\"lg\" bg={bg} variant={variant}>\n        <Navbar.Brand href=\"/\">The Movie Bible</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"Theme\" id=\"collasible-nav-dropdown\">\n              { dark ? <NavDropdown.Item onClick={() => toggle()}>Switch to Light</NavDropdown.Item> : <NavDropdown.Item onClick={() => toggle()}>Switch to Dark</NavDropdown.Item> }\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header> \n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styles from './PagesNavigator.module.scss';\n\nconst PagesNavigator = (props) => {\n  let links;\n  if (props.location.pathname.includes('/discover/movie/page/')) {\n    links = <Link to='/'>Home</Link>;\n  } else {\n    links = <Link to='/discover/movie/page/1'>Discover</Link>;\n  }\n  return (\n    <div className={styles.pagesNavigator}>\n      {links}\n    </div>\n  );\n}\n\nexport default withRouter(PagesNavigator);","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = props => {\n  return (\n    <button className={styles.button} onClick={props.handleClick}>{props.children}</button>\n  )\n}\n\nexport default Button;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport styles from './MovieCard.module.scss';\n\nconst MovieCard = ({ poster_path, title, id }) => {\n  if (!poster_path) {\n    return (\n      <Link to={`/movie/${id}`}>\n        <Card className={styles.card}>\n          <Card.Body>\n            <Card.Title>{title}</Card.Title>\n            <Card.Text>\n              Poster not available.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Link>\n    );\n  }\n  return (\n    <Link to={`/movie/${id}`}>\n      <Card className={styles.card}>\n        <Card.Img variant=\"top\" src={`https://image.tmdb.org/t/p/w500${poster_path}`} />\n      </Card>\n    </Link>\n  )\n}\n\nexport default MovieCard;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Button from '../../components/Button/Button';\nimport MovieCard from '../../components/MovieCard/MovieCard';\n\nimport styles from './Home.module.scss';\nimport _ from 'lodash';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst API_KEY = '8d5e081a30c6a90602920729b5a9a439';\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      results: [],\n      error: false,\n      errorMessage: null,\n      isLoading: false\n    };\n  }\n  handleChange = (e) => {\n    this.setState({ searchTerm: e.target.value }, () => {\n      this.search(this.state.searchTerm);\n    });\n  }\n  search = _.debounce(searchTerm => {\n    this.setState({ isLoading: true });\n    if (searchTerm === '') {\n      this.setState({ results: [], isLoading: false });\n      return;\n    }\n    axios\n      .get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`)\n      .then(response => {\n        this.setState({ results: response.data.results, isLoading: false });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ error: true, errorMessage: error, isLoading: false });\n      });\n  }, 1000);\n  render () {\n    return (\n      <div className={styles.home}>\n        <div className={styles.searchBar}>\n          <input className={styles.search} placeholder=\"Search movie...\" type='text' onChange={this.handleChange} value={this.state.searchTerm} />\n          <Button handleClick={() => {\n            this.setState({ searchTerm: '', results: [] });\n          }}>\n            Clear\n          </Button>\n        </div>\n        <ClipLoader\n          css={override}\n          size={150}\n          color={\"#123abc\"}\n          loading={this.state.isLoading}\n        />\n        <div className={styles.grid}>\n          {this.state.results.map(movie => {\n            return (\n              <MovieCard key={movie.id} {...movie} />\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport MovieCard from '../../components/MovieCard/MovieCard';\nimport Button from '../../components/Button/Button';\nimport styles from './Discover.module.scss';\n\nconst API_KEY = '8d5e081a30c6a90602920729b5a9a439';\nconst URL = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}`;\n\nclass Discover extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isLoading: false,\n      page: parseInt(this.props.match.params.page),\n      error: false,\n      hasMore: true,\n      sortBy: 'popularity.desc',\n      total_pages: 0\n    };\n  }\n  fetch = () => {\n    this.setState({ loading: true });\n    axios\n      .get(`${URL}&sort_by=${this.state.sortBy}&page=${this.state.page}`)\n      .then(response => {\n        if (this.state.page === response.data.total_pages) {\n          this.setState({ hasMore: false });\n        }\n        this.setState({ movies: response.data.results, total_pages: response.data.total_pages, loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({ error: true, loading: false });\n      });\n  }\n  componentDidMount () {\n    this.fetch();\n  }\n  componentDidUpdate(oldProps) {\n    const newProps = this.props;\n    if (parseInt(oldProps.match.params.page) !== parseInt(newProps.match.params.page)) {\n      this.fetch();\n    }\n  }\n  UNSAFE_componentWillReceiveProps(newProps) {\n    const page = parseInt(newProps.match.params.page);\n    this.setState({ page }, () => this.fetch());\n  }\n  render () {\n    return (\n      <div className={styles.discover}>\n        <div className={styles.paginator}>\n          <div>\n            {this.state.page === 1 ? null : (\n              <div>\n                <Button handleClick={() => {\n                  this.setState({ page: 1 }, () => {\n                    this.props.history.push(`/discover/movie/page/${this.state.page}`);\n                  });\n                }}>\n                  Go to first\n                </Button>\n                <Button handleClick={() => {\n                  this.setState({ page: this.state.page - 1 }, () => {\n                    this.props.history.push(`/discover/movie/page/${this.state.page}`);\n                  });\n                }}>\n                  Previous\n                </Button>\n              </div>\n            )}\n          </div>\n          <div>\n            {this.state.page === 500 ? null : (\n              <div>\n                <Button handleClick={() => {\n                  this.setState({ page: this.state.page + 1 }, () => {\n                    this.props.history.push(`/discover/movie/page/${this.state.page}`);\n                  });\n                }}>\n                  Next\n                </Button>\n                <Button handleClick={() => {\n                  this.setState({ page: this.state.total_pages }, () => {\n                    this.props.history.push(`/discover/movie/page/${this.state.page}`);\n                  });\n                }}>\n                  Go to last\n              </Button>\n            </div>\n            )}\n          </div>\n        </div>\n        <div className={styles.grid}>\n          {this.state.movies.map(movie => <MovieCard key={movie.id} {...movie} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Discover);","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from '../../components/Button/Button';\nimport styles from './Movie.module.scss';\nimport { css } from \"@emotion/core\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst API_KEY = '8d5e081a30c6a90602920729b5a9a439';\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Movie = props => {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [spokenLanguages, setSpokenLanguages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${parseInt(props.match.params.movie_id)}?api_key=${API_KEY}`)\n      .then(response => {\n        setMovie(response.data);\n        setGenres(response.data.genres);\n        setSpokenLanguages(response.data.spoken_languages);\n        console.log(response.data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, [props.match.params.movie_id]);\n  const extractSpokenLanguages = (spokenLanguages) => {\n    const sL = spokenLanguages.map(sL => {\n      return ` ${sL['name']}`;\n    });\n    return sL.toString();\n  }\n  return (\n    <div className={styles.movie}>\n      <ClipLoader\n        css={override}\n        size={150}\n        color={\"#123abc\"}\n        loading={isLoading}\n      />\n      {movie ? (\n        <>\n          <div className={styles.title}>\n            <h1>{movie.title}</h1>\n            <small>{movie.tagline}</small>\n          </div>\n          <div className={styles.genres}>\n            {genres.map(genre => (\n              <Button key={genre.id} handleClick={() => {\n                props.history.push(`/genre/${genre.id}`);\n              }}>\n                {genre.name}\n              </Button>\n            ))}\n          </div>\n          <div className={styles.overview}>\n            <p>{movie.overview}</p>\n          </div>\n          <div className={styles.runtime}>\n            <p>{movie.runtime} minutes</p>\n          </div>\n          <div className={styles.releaseDate}>\n            <p>Released on the {movie.release_date}</p>\n          </div>\n          <div className={styles.popularity}>\n            <p>Popularity {movie.popularity}</p>\n          </div>\n          <div className={styles.spokenLanguages}>\n            <p>\n              Spoken languages:\n              {extractSpokenLanguages(spokenLanguages)}\n              </p>\n          </div>\n          <div className={styles.media}>\n            {movie.poster_path ? (\n              <div>\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n              </div>\n            ) : null}\n            {movie.backdrop_path ? (\n              <div>\n                <img src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`} alt={movie.title} />\n              </div>\n            ) : null}\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n}\n\nexport default withRouter(Movie);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Navigation from './components/Navigation/Navigation';\nimport PagesNavigator from './components/PagesNavigator/PagesNavigator';\nimport Home from './pages/Home/Home';\nimport Discover from './pages/Discover/Discover';\nimport Movie from './pages/Movie/Movie';\n\nconst App = () => {\n  return (\n    <div>\n      <Navigation />\n      <div className='container' style={{\n        paddingBottom: 50\n      }}>\n        <PagesNavigator />\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/discover/movie/page/:page'>\n            <Discover />\n          </Route>\n          <Route exact path='/movie/:movie_id'>\n            <Movie />\n          </Route>\n          {/* <Route>\n            <NotFound />\n          </Route> */}\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__2DTOA\",\"title\":\"Movie_title__2cPUI\",\"genres\":\"Movie_genres__1IeJC\",\"media\":\"Movie_media__2WSz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"searchBar\":\"Home_searchBar__1cPS_\",\"search\":\"Home_search__3j1Qe\",\"grid\":\"Home_grid__sUtIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discover\":\"Discover_discover__2QmHP\",\"paginator\":\"Discover_paginator__30oc7\",\"grid\":\"Discover_grid__N3-dO\",\"card\":\"Discover_card__3dAWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__1C3-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesNavigator\":\"PagesNavigator_pagesNavigator__1CjZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\"};"],"sourceRoot":""}